#!/bin/bash

# Script de inicializa√ß√£o SSL com Let's Encrypt
# Autor: Sistema de Gerenciamento Financeiro
# Data: $(date)

set -e

DOMAIN="controle-financeiro.gaius.digital"
EMAIL="ola@carlostelles.com.br"  # Altere para seu email
CERT_PATH="/etc/letsencrypt/live/$DOMAIN"
WWW_PATH="/var/www/certbot"

echo "=== Inicializando configura√ß√£o SSL para $DOMAIN ==="

# Verificar se o certificado j√° existe e √© v√°lido
if [ -d "$CERT_PATH" ]; then
    echo "Certificado encontrado em $CERT_PATH"
    
    # Verificar se o certificado ainda √© v√°lido (mais de 30 dias)
    if openssl x509 -checkend 2592000 -noout -in "$CERT_PATH/fullchain.pem" 2>/dev/null; then
        echo "Certificado ainda √© v√°lido por mais de 30 dias. Usando certificado existente."
        exit 0
    else
        echo "Certificado expira em menos de 30 dias ou √© inv√°lido. Renovando..."
    fi
else
    echo "Certificado n√£o encontrado. Criando novo certificado..."
fi

# Criar diret√≥rio para valida√ß√£o ACME
mkdir -p "$WWW_PATH/.well-known/acme-challenge"

# Verificar se o dom√≠nio est√° acess√≠vel
echo "Verificando conectividade com $DOMAIN..."
if command -v curl >/dev/null 2>&1; then
    if ! curl -s --connect-timeout 10 "http://$DOMAIN/.well-known/acme-challenge/" > /dev/null; then
        echo "Aviso: N√£o foi poss√≠vel conectar com $DOMAIN. Certifique-se de que:"
        echo "1. O DNS est√° configurado corretamente"
        echo "2. O servidor est√° acess√≠vel na porta 80"
        echo "3. O Nginx est√° rodando e configurado"
        echo ""
    else
        echo "‚úÖ Conectividade OK com $DOMAIN"
    fi
else
    echo "‚ÑπÔ∏è  Curl n√£o dispon√≠vel - pulando verifica√ß√£o de conectividade"
fi
echo "Continuando com a solicita√ß√£o do certificado..."

# Obter ou renovar certificado
echo "Solicitando certificado SSL para $DOMAIN..."

# Verificar se √© ambiente de produ√ß√£o ou desenvolvimento
if [ "$1" = "staging" ] || [ "$SSL_STAGING" = "true" ]; then
    echo "Usando staging environment para testes..."
    STAGING_FLAG="--staging"
else
    echo "Usando ambiente de produ√ß√£o..."
    STAGING_FLAG=""
fi

certbot certonly \
    --webroot \
    --webroot-path="$WWW_PATH" \
    --email "$EMAIL" \
    --agree-tos \
    --no-eff-email \
    --verbose \
    $STAGING_FLAG \
    -d "$DOMAIN"

if [ $? -eq 0 ]; then
    echo "‚úÖ Certificado SSL obtido com sucesso!"
    echo "Certificado salvo em: $CERT_PATH"
    
    # Verificar informa√ß√µes do certificado
    echo ""
    echo "=== Informa√ß√µes do Certificado ==="
    openssl x509 -in "$CERT_PATH/fullchain.pem" -text -noout | grep -E "(Subject:|Not After:|DNS:)"
    
    # Testar configura√ß√£o do nginx
    echo ""
    echo "=== Testando configura√ß√£o do Nginx ==="
    if command -v nginx > /dev/null; then
        nginx -t
        echo "‚úÖ Configura√ß√£o do Nginx v√°lida!"
    fi
    
    echo ""
    echo "üîß Para aplicar o certificado, reinicie o Nginx:"
    echo "docker-compose restart nginx"
    
else
    echo "‚ùå Erro ao obter certificado SSL"
    echo "Verifique:"
    echo "1. DNS do dom√≠nio $DOMAIN est√° apontando para este servidor"
    echo "2. Portas 80 e 443 est√£o abertas no firewall"
    echo "3. Nginx est√° configurado corretamente"
    exit 1
fi